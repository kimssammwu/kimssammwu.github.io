{"version":3,"file":"component---src-pages-index-tsx-165741a1859565dd903b.js","mappings":"oOAOA,MAAMA,EAAW,CAACC,EAAWC,KAC3B,MAAMC,EA0CR,SAAyBC,GACvB,MAAM,KAAEH,EAAI,SAAEC,GAAaE,EACrBC,EAAiBH,EANzB,SAAqBD,GACnB,OAAOA,EAAKK,SAASC,gBAAgBC,MAAM,KAAKC,MAAMD,MAAM,KAAK,EACnE,CAIkCE,CAAYT,IACtCU,EAAQV,EAAKW,YAAYD,MACzBE,EAAcZ,EAAKW,YAAYC,YAC/BC,EAAcb,EAAKW,YAAYG,KAC/BC,EAAOf,EAAKW,YAAYI,KAC9B,MAAO,CACLC,UAAWZ,EACXM,MAAOA,EACPE,YAAaA,EACbE,KAAMD,EACNE,KAAMA,EAEV,CAxDmBE,CAAgBjB,GAC3BkB,GAAgBC,EAAAA,EAAAA,GAAWjB,EAASY,MACpCM,EAAW,SAAWlB,EAASa,KAE/BC,EACJK,EAAAA,cAACC,EAAAA,EAAW,CACVC,UAAU,uEAEVC,MAAOtB,EAASc,UAChBS,IAAKvB,EAASQ,QAIlB,OACEW,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAIP,GACRC,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,qBACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,QACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iGACZP,GAGHK,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,YACbF,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,mFACXrB,EAASQ,OAEZW,EAAAA,cAAAA,OAAAA,CAAME,UAAU,sCACbrB,EAASU,aAEZS,EAAAA,cAAAA,OAAAA,CAAME,UAAU,+BACbL,EAAc,YAKlB,EA8DX,MAtCiB,YAEf,WAAYf,EAA2ByB,GAAa,IAAD,EAE9B,OADnBC,EAAAA,EAAAA,KAAAA,KAAM1B,IAAM,MACPyB,MAAQA,EAAM,CACrB,EALe,YAKd,kBA8BA,OA9BA,EAEDE,eAAA,WACE,OAAOT,EAAAA,cAAAA,EAAAA,SAAAA,KACT,EAAC,EAEDU,gBAAA,WACE,OAAOV,EAAAA,cAAAA,EAAAA,SAAAA,KACT,EAAC,EAEDW,cAAA,WACE,MAAM/B,EAAWgC,KAAKL,MAAMM,QAAQC,MAAMC,QAAO,CAACC,EAAI,KAAe,IAAD,MAAb,KAAErC,GAAM,EAE7D,OADAqC,EAAIrC,EAAKsC,MAA4B,QAAvB,EAAGtC,EAAKuC,uBAAe,aAApBC,EAAsBC,gBAChCJ,CAAG,GACT,CAAC,GAEJ,IAAIK,EAAU,EACd,OACErB,EAAAA,cAAAA,MAAAA,KACGY,KAAKL,MAAMe,OAAOR,MAAMS,KAAIC,IAAe,IAAd,KAAE7C,GAAM,EACpC,OACEqB,EAAAA,cAACtB,EAAQ,CACP+C,IAAKJ,IACL1C,KAAMA,EACNC,SAAUA,GACA,IAKtB,EAAC,EAnCc,CAAS8C,EAAAA,GCrD1B,MATwB,KACtB,MAAMC,EAAO,IAAIC,EACf,CAAEC,GAAI,IAAKxC,MAAO,UAAWK,KAAM,YCHxBoC,EAAAA,EAAAA,gBAAe,eDO5B,OAAO9B,EAAAA,cAAAA,EAAAA,SAAAA,KAAG2B,EAAKI,SAAY,C","sources":["webpack://kimssammwu-blog/./src/components/pages/LandingPage.tsx","webpack://kimssammwu-blog/./src/pages/index.tsx","webpack://kimssammwu-blog/./src/components/hooks/use-markdown-collection.tsx"],"sourcesContent":["import React from \"react\";\nimport PageComponent from \"./PageComponent\";\nimport { PageComponentProps } from \"../../interfaces\";\nimport { formatDate } from \"../../utils\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst PostCard = (node: any, imageSet: any) => {\n  const property = getPostProperty(node, imageSet);\n  const formattedDate = formatDate(property.date);\n  const postLink = \"/post/\" + property.slug;\n\n  const thumbnail = (\n    <GatsbyImage\n      className=\"w-36 h-24 transition duration-300 ease-in-out group-hover:scale-125\n      \"\n      image={property.thumbnail}\n      alt={property.title}\n    />\n  );\n\n  return (\n    <Link to={postLink}>\n      <div className=\"group py-6 px-2.5\">\n        <div className=\"flex\">\n          <div className=\"hidden md:block h-24 overflow-hidden rounded border border-gray-200 dark:border-gray-500 mr-4\">\n            {thumbnail}\n          </div>\n\n          <div className=\"min-h-24\">\n            <h1 className=\"block font-semibold text-xl strong group-hover:text-blue-400 dark:text-gray-200\">\n              {property.title}\n            </h1>\n            <span className=\"block mb-4 text-base text-gray-600\">\n              {property.description}\n            </span>\n            <span className=\"block text-sm text-gray-600\">\n              {formattedDate}에 작성됨\n            </span>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nfunction getFileName(node) {\n  return node.internal.contentFilePath.split(\"/\").pop().split(\".\")[0];\n}\n\nfunction getPostProperty(props) {\n  const { node, imageSet } = props;\n  const thumbnailImage = imageSet[getFileName(node)];\n  const title = node.frontmatter.title;\n  const description = node.frontmatter.description;\n  const writtenDate = node.frontmatter.date;\n  const slug = node.frontmatter.slug;\n  return {\n    thumbnail: thumbnailImage,\n    title: title,\n    description: description,\n    date: writtenDate,\n    slug: slug,\n  };\n}\n\nclass LandingPage extends PageComponent {\n  posts: any;\n  constructor(props: PageComponentProps, posts: any) {\n    super(props);\n    this.posts = posts;\n  }\n\n  renderLeftSide(): React.ReactNode {\n    return <></>;\n  }\n\n  renderRightSide(): React.ReactNode {\n    return <></>;\n  }\n\n  renderContent() {\n    const imageSet = this.posts.allFile.edges.reduce((acc, { node }) => {\n      acc[node.name] = node.childImageSharp?.gatsbyImageData;\n      return acc;\n    }, {});\n\n    let counter = 0;\n    return (\n      <div>\n        {this.posts.allMdx.edges.map(({ node }) => {\n          return (\n            <PostCard\n              key={counter++}\n              node={node}\n              imageSet={imageSet}\n            ></PostCard>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import * as React from \"react\";\nimport LandingPage from \"../components/pages/LandingPage\";\nimport { useMarkdownCollection } from \"../components/hooks/use-markdown-collection\";\n\nconst LandingPageView = () => {\n  const view = new LandingPage(\n    { id: \"0\", title: \"landing\", slug: \"landing\" },\n    useMarkdownCollection()\n  );\n\n  return <>{view.render()}</>;\n};\n\nexport default LandingPageView;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useMarkdownCollection = () => {\n  const data = useStaticQuery(graphql`\n    query MarkdownCollection {\n      allMdx(\n        filter: { frontmatter: { private: { ne: true } } }\n        sort: { frontmatter: { date: DESC } }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              description\n              date\n              slug\n            }\n            internal {\n              contentFilePath\n            }\n          }\n        }\n      }\n      allFile(filter: { extension: { regex: \"/(png|jpg|jpeg|gif)/\" } }) {\n        edges {\n          node {\n            id\n            name\n            publicURL\n            childImageSharp {\n              gatsbyImageData(width: 144)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data;\n};\n"],"names":["PostCard","node","imageSet","property","props","thumbnailImage","internal","contentFilePath","split","pop","getFileName","title","frontmatter","description","writtenDate","date","slug","thumbnail","getPostProperty","formattedDate","formatDate","postLink","React","GatsbyImage","className","image","alt","Link","to","posts","_this","renderLeftSide","renderRightSide","renderContent","this","allFile","edges","reduce","acc","name","childImageSharp","_node$childImageSharp","gatsbyImageData","counter","allMdx","map","_ref2","key","PageComponent","view","LandingPage","id","useStaticQuery","render"],"sourceRoot":""}